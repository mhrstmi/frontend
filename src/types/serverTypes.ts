//use npm run api-gen for update this file
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "": {
    get: operations["AppController_getHello"];
  };
  "/knowledge/{group}": {
    get: operations["KnowledgeController_getAll"];
  };
  "/knowledge/{group}/list": {
    get: operations["KnowledgeController_getList"];
  };
  "/knowledge/{id}": {
    get: operations["KnowledgeController_getDetail"];
  };
  "/admin/knowledge": {
    post: operations["AdminKnowledgeController_createKnowledge"];
  };
  "/admin/knowledge/{id}": {
    put: operations["AdminKnowledgeController_updateKnowledge"];
    delete: operations["AdminKnowledgeController_deleteKnowledge"];
  };
  "/group/knowledge": {
    get: operations["KnowledgeGroupController_getAllKnowledgeGroups"];
    post: operations["KnowledgeGroupController_createKnowledgeGroup"];
  };
  "/group/knowledge/{id}": {
    delete: operations["KnowledgeGroupController_deleteKnowledgeGroup"];
    patch: operations["KnowledgeGroupController_updateKnowledgeGroup"];
  };
  "/admin/login": {
    post: operations["AdminConrtroller_loginAdmin"];
  };
  "/admin/calendar": {
    post: operations["AdminCalendarController_createKnowledge"];
  };
  "/admin/calendar/{id}": {
    put: operations["AdminCalendarController_updateKnowledge"];
    delete: operations["AdminCalendarController_deleteCalendar"];
  };
  "/calendar": {
    get: operations["CalendarController_getAllCalendar"];
  };
  "/research/{group}": {
    get: operations["ResearchController_getAll"];
  };
  "/research/{group}/list": {
    get: operations["ResearchController_getList"];
  };
  "/research/{id}": {
    get: operations["ResearchController_getDetail"];
  };
  "/admin/research": {
    post: operations["AdminResearchController_createResearch"];
  };
  "/admin/research/{id}": {
    put: operations["AdminResearchController_updateResearch"];
    delete: operations["AdminResearchController_deleteResearch"];
  };
  "/group/research": {
    get: operations["ResearchGroupController_getAllResearchGroups"];
    post: operations["ResearchGroupController_createResearchGroup"];
  };
  "/group/research/{id}": {
    delete: operations["ResearchGroupController_deleteResearchGroup"];
    patch: operations["ResearchGroupController_updateResearchGroup"];
  };
  "/student/signup": {
    post: operations["StudentController_signup"];
  };
  "/student/signin": {
    post: operations["StudentController_signin"];
  };
  "/student": {
    get: operations["StudentController_studentList"];
  };
  "/slider": {
    get: operations["SliderController_getSlider"];
    post: operations["SliderController_createSlider"];
  };
  "/library": {
    get: operations["LibraryController_getAll"];
    post: operations["AdminLibraryController_createLibrary"];
  };
  "/library/{id}": {
    get: operations["LibraryController_getDetail"];
    put: operations["AdminLibraryController_updateLibrary"];
    delete: operations["AdminLibraryController_deleteLibrary"];
  };
  "/library/list": {
    get: operations["LibraryController_getList"];
  };
  "/seed": {
    post: operations["SeedController_seedDatabase"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    KnowledgeAttachmentFullOutputDto: {
      name: string;
      fileName: string;
      path: string;
      mimeType: string;
    };
    KnowledgeFullOutPutDto: {
      id: number;
      title: string;
      body: string;
      knowledgeAttachment?: components["schemas"]["KnowledgeAttachmentFullOutputDto"][];
    };
    KnowledgeListOutPutDto: {
      id: number;
      title: string;
      body: string;
    };
    KnowledgeDto: {
      "files[]": string[];
      /** @description The title */
      title: string;
      body: string;
    };
    HttpResponseDto: {
      status: number;
      message: string;
      data?: Record<string, never>;
    };
    KnowledgeGroupDto: {
      file: string[];
      /** @description The name of group */
      name: string;
    };
    KnowledgeGroupListOutputDto: {
      id: number;
      name: string;
      fileName: string;
      path: string;
      mimeType: string;
    };
    KnowledgeGroupUpdateDto: {
      file: string[];
      /** @description The name of group */
      name?: string;
    };
    AdminLoginDto: {
      userName: string;
      password: string;
    };
    AdminLoginOutputDto: {
      message: string;
      token: string;
    };
    CalendarDto: {
      "files[]": string[];
      /**
       * Format: date-time
       * @description The title
       */
      dateShow: string;
      text?: string;
    };
    CalendarAttachmentOutputDto: {
      id: number;
      name: string;
      path: string;
      fileName: string;
      mimeType: string;
    };
    CalendarOutputDto: {
      id: number;
      /** Format: date-time */
      dateShow: string;
      text?: string;
      calendarAttachment: components["schemas"]["CalendarAttachmentOutputDto"][];
    };
    ResearchAttachmentFullOutputDto: {
      name: string;
      fileName: string;
      path: string;
      mimeType: string;
    };
    ResearchFullOutPutDto: {
      id: number;
      title: string;
      abstract: string;
      body: string;
      researchAttachment?: components["schemas"]["ResearchAttachmentFullOutputDto"][];
    };
    ResearchListOutPutDto: {
      id: number;
      title: string;
      abstract: string;
      body: string;
    };
    ResearchDto: {
      "files[]": string[];
      /** @description The title */
      title: string;
      body: string;
      abstract: string;
    };
    ResearchGroupDto: {
      file: string[];
      /** @description The name of group */
      name: string;
    };
    ResearchGroupListOutputDto: {
      id: number;
      name: string;
      fileName: string;
      path: string;
      mimeType: string;
    };
    ResearchGroupUpdateDto: {
      file: string[];
      /** @description The name of group */
      name?: string;
    };
    SignupStudent: {
      /** @enum {number} */
      grade?: 0 | 1 | 2 | 3;
      fatherName?: string;
      codeMelli: string;
      password: string;
      /** Format: date-time */
      birthDate: string;
      mobile: string;
    };
    StudentSigninDto: {
      codeMelli: string;
      password: string;
    };
    StudentListOutputDto: {
      id: number;
      codeMelli: string;
      mobile: string;
      /** @enum {number} */
      grade?: 0 | 1 | 2 | 3;
      /** Format: date-time */
      birthDate: string;
      fatherName?: string;
    };
    SliderDto: {
      "files[]": string[];
    };
    LibraryDto: {
      "files[]": string[];
      /** @description The title */
      title: string;
      comment?: string;
    };
    LibraryAttachmentFullOutputDto: {
      name: string;
      fileName: string;
      path: string;
      mimeType: string;
    };
    LibraryFullOutPutDto: {
      id: number;
      title: string;
      comment?: string;
      libraryAttachment?: components["schemas"]["LibraryAttachmentFullOutputDto"][];
    };
    LibraryListOutPutDto: {
      id: number;
      title: string;
      comment?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  AppController_getHello: {
    responses: {
      200: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  KnowledgeController_getAll: {
    parameters: {
      query?: {
        search?: string;
      };
      path: {
        group: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["KnowledgeFullOutPutDto"][];
        };
      };
    };
  };
  KnowledgeController_getList: {
    parameters: {
      query?: {
        search?: string;
      };
      path: {
        group: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["KnowledgeListOutPutDto"][];
        };
      };
    };
  };
  KnowledgeController_getDetail: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["KnowledgeFullOutPutDto"];
        };
      };
    };
  };
  AdminKnowledgeController_createKnowledge: {
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["KnowledgeDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  AdminKnowledgeController_updateKnowledge: {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["KnowledgeDto"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  AdminKnowledgeController_deleteKnowledge: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  KnowledgeGroupController_getAllKnowledgeGroups: {
    parameters: {
      query?: {
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["KnowledgeGroupListOutputDto"][];
        };
      };
    };
  };
  KnowledgeGroupController_createKnowledgeGroup: {
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["KnowledgeGroupDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  KnowledgeGroupController_deleteKnowledgeGroup: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  KnowledgeGroupController_updateKnowledgeGroup: {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["KnowledgeGroupUpdateDto"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  AdminConrtroller_loginAdmin: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminLoginDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["AdminLoginOutputDto"];
        };
      };
    };
  };
  AdminCalendarController_createKnowledge: {
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["CalendarDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  AdminCalendarController_updateKnowledge: {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["CalendarDto"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  AdminCalendarController_deleteCalendar: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  CalendarController_getAllCalendar: {
    parameters: {
      query?: {
        search?: string;
        from?: string;
        to?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["CalendarOutputDto"][];
        };
      };
    };
  };
  ResearchController_getAll: {
    parameters: {
      query?: {
        search?: string;
      };
      path: {
        group: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["ResearchFullOutPutDto"][];
        };
      };
    };
  };
  ResearchController_getList: {
    parameters: {
      query?: {
        search?: string;
      };
      path: {
        group: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["ResearchListOutPutDto"][];
        };
      };
    };
  };
  ResearchController_getDetail: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["ResearchFullOutPutDto"];
        };
      };
    };
  };
  AdminResearchController_createResearch: {
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["ResearchDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  AdminResearchController_updateResearch: {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["ResearchDto"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  AdminResearchController_deleteResearch: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  ResearchGroupController_getAllResearchGroups: {
    parameters: {
      query?: {
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["ResearchGroupListOutputDto"][];
        };
      };
    };
  };
  ResearchGroupController_createResearchGroup: {
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["ResearchGroupDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  ResearchGroupController_deleteResearchGroup: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  ResearchGroupController_updateResearchGroup: {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["ResearchGroupUpdateDto"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  StudentController_signup: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SignupStudent"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  StudentController_signin: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["StudentSigninDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  StudentController_studentList: {
    parameters: {
      query?: {
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["StudentListOutputDto"][];
        };
      };
    };
  };
  SliderController_getSlider: {
    responses: {
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
    };
  };
  SliderController_createSlider: {
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["SliderDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  LibraryController_getAll: {
    parameters: {
      query?: {
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["LibraryFullOutPutDto"][];
        };
      };
    };
  };
  AdminLibraryController_createLibrary: {
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["LibraryDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  LibraryController_getDetail: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["LibraryFullOutPutDto"];
        };
      };
    };
  };
  AdminLibraryController_updateLibrary: {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["LibraryDto"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  AdminLibraryController_deleteLibrary: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HttpResponseDto"];
        };
      };
    };
  };
  LibraryController_getList: {
    parameters: {
      query?: {
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["LibraryListOutPutDto"][];
        };
      };
    };
  };
  SeedController_seedDatabase: {
    responses: {
      201: {
        content: never;
      };
    };
  };
}
